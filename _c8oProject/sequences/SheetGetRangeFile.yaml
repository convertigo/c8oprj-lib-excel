comment: Imports an xlsx file ( from "itemPath") and outputs a JSON object of the "name" Sheet by the range of "range". Uses the SheetJS CE framework.
↓read_xlsx [steps.SimpleStep-1708681393921]: 
  expression: |
    'include(''SheetJS/Shim.js'')
    include(''SheetJS/SheetJS.js'')
    
    if(itemPath && itemPath != ""){
    	let file = new java.io.File(itemPath);
    	let baData = org.apache.commons.io.FileUtils.readFileToByteArray(file);
    	let b64 = ""+com.twinsoft.convertigo.engine.util.Base64.encodeBytes(baData)
    	
    	const workbook = XLSX.read(b64);
    	
    	if(name && name != ""){
    		sheet_name = name;
    	} else {
    		sheet_name = workbook.SheetNames[0];
    	}
    	const worksheet = workbook.Sheets[sheet_name];
    	let opts = {};
    	
    	if(range && range != ""){
    		sheet_range = XLSX.utils.decode_range(range);
    	} else {
    		sheet_range = worksheet[''!ref''];
    	}
    	
    	opts["range"] = sheet_range;
    	
    	const raw_data = XLSX.utils.sheet_to_json(worksheet, opts);
    }'
↓name [variables.RequestableVariable-1708681503651]: 
  comment: The sheet name in a workbook (If none provided, the first sheet in a workbook)
↓range [variables.RequestableVariable-1709565345884]: 
  comment: 'The range of cells to retrieve for ex: as A1:D10 (If not provided, all non empty cells in a sheet)'
↓itemPath [variables.RequestableVariable-1708681361757]: 
  comment: The local path of the file to import.
  isFileUpload: true